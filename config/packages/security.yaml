security:
  encoders:
    App\Entity\User:
      algorithm: "argon2i"
      memory_cost: "%env(ARGON2I_MEMORY_COST)%"
      time_cost: "%env(ARGON2I_TIME_COST)%"
      threads: "%env(ARGON2I_THREADS)%"
  providers:
    main:
      entity: { class: "App\\Entity\\User", property: "username" }
  firewalls:
    login:
      pattern: ^/login
      stateless: true
      anonymous: true
      json_login:
        check_path: /login
        username_path: username
        password_path: password
        success_handler: lexik_jwt_authentication.handler.authentication_success
        failure_handler: lexik_jwt_authentication.handler.authentication_failure
        require_previous_session: false
    main:
      pattern: ^/
      stateless: true
      anonymous: true
      guard:
        authenticators:
          - lexik_jwt_authentication.jwt_token_authenticator

  access_control:
    - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/users, roles: IS_AUTHENTICATED_FULLY }
  role_hierarchy:
    ROLE_USER: ROLE_USER
    ROLE_ADMIN: [ROLE_ADMIN, ROLE_USER]
